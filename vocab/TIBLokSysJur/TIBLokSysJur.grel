[
  {
    "op": "core/column-split",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "Notation",
    "guessCellType": true,
    "removeOriginalColumn": true,
    "mode": "separator",
    "separator": " ",
    "regex": false,
    "maxColumns": 0,
    "description": "Split column Notation by separator"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "Notation 1",
    "expression": "grel:'<http://uricorn.fly/tib_lok_sys#' + value + '-'",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Notation 1 using expression grel:'<http://uricorn.fly/tib_lok_sys#' + value + '-'"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "Notation 1",
    "expression": "join ([coalesce(cells['Notation 1'].value,''),coalesce(cells['Notation 2'].value,'')],'')",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Notation 1 using expression join ([coalesce(cells['Notation 1'].value,''),coalesce(cells['Notation 2'].value,'')],'')"
  },
  {
    "op": "core/column-reorder",
    "columnNames": [
      "Notation 1",
      "Name"
    ],
    "description": "Reorder columns"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "Notation 1",
    "expression": "grel:value + '>'",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Notation 1 using expression grel:value + '>'"
  }
]